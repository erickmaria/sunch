name: Build and Test

on:
  push:
    branches: 
      - main
  pull_request:

jobs:
  changelog:
    name: Changelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Fetch Remote Branches
        run: git fetch origin
      
      - name: Check for Changelog Changes
        if: github.event_name == 'pull_request'
        id: changelog
        run: |
          if git diff --name-only origin/${{ github.base_ref }} -- CHANGELOG.md; then
            echo "Changelog has been updated."
            exit 0
          else
            echo "Changelog needs to be updated."
            exit 1
          fi
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 20.x
    - run: npm install
    - name: Run Lint
      run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - name: Run Build
      run: npm run build

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - run: npm install
      - name: Run Typecript Coverage
        run: npm run ts-coverage
  
  test-release:
    if: github.event_name == 'pull_request'
    needs:
      - lint
      - build
      - coverage

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    - name: Install dependencies
      run:
        version=$(npm pkg get version | xargs)"
        pr=pr-{{ github.event.pull_request.number  }}
        npm version $version-$pr
        npm version
        # npm install

    # - if: matrix.os == 'ubuntu-latest'
    #   name: Build Test Release ${{ matrix.os }}
    #   run: npm run build:linux

    # - if: matrix.os == 'windows-latest'
    #   name: Build Test Release ${{ matrix.os }}
    #   run: npm run build:windows

    # - if: matrix.os == 'macos-latest'
    #   name: Build Test Release ${{ matrix.os }}
    #   run: npm run build:macos

    # steps:
    #   - name:  Generate Test Release artifacts
    #     uses: actions/upload-artifact@v2
    #     with:
    #       name: release-artifacts
    #       path: |
    #         ./release/${{ steps.get_project_version.outputs.project_version }}/*.exe
    #         ./release/${{ steps.get_project_version.outputs.project_version }}/*.dmg
    #         ./release/${{ steps.get_project_version.outputs.project_version }}/*.deb
